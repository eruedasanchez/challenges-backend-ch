paths:
  /api/carts:
    post:
      summary: Crea un carrito nuevo en la DB
      tags:
        - Carts
      responses:
        "200":
          description: Devuelve un objeto con el status "ok" y un campo newCart que contiene un arreglo de productos vacio
        "500":
          description: Devuelve un objeto con un Error donde la primer componente muestra el campo error Unexpected y la otra componente con el campo detalle con el mensaje del error
  /api/carts/{cid}:
    get:
      summary: Obtiene el carrito de la DB que coincida con el cid pasado por params
      tags:
        - Carts
      parameters:
      - name: cid
        in: path
        required: true
        description: Ingrese el CID del carrito que desea solicitar
        schema:
          type: ObjectId
      responses:
        "201":
          description: Devuelve un objeto con el status "ok" y un campo MongoDBCart con el carrito de cid solicitado
        "500":
          description: Devuelve un objeto con un Error donde la primer componente muestra el campo error Unexpected error y la otra componente con el campo detalle con el mensaje del error
    put:
      summary: Modifica el carrito de la DB que coincida con el cid pasado por params
      tags:
        - Carts
      requestBody:
        required: true
        content:
          application/json:
            schema:
            $ref: '#components/requestBodies/modifyCart'
      parameters:
        - name: cid
          in: path
          required: true
          description: Ingrese el CID del carrito que desea modificar
          schema:
            type: ObjectId
      responses:
        "200":
          description: Devuelve un objeto con el status "ok" y un campo updatedProducts con el detalle de la operación de modificación aplicada al carrito solicitado
        "500":
          description: Devuelve un objeto con un Error donde la primer componente muestra el campo error Unexpected error y la otra componente con el campo detalle con el mensaje del error
    delete:
      summary: Elimina todos los productos del carrito que coincida con el cid pasado por params
      tags:
        - Carts
      parameters:
      - name: cid
        in: path
        required: true
        description: Ingrese el CID del carrito que desea vaciar
        schema:
          type: ObjectId
      responses:
        "200":
          description: Devuelve un objeto con el status "ok" y un campo cleanProducts con el detalle de la operación de vaciado aplicado al carrito solicitado
        "500":
          description: Devuelve un objeto con un Error donde la primer componente muestra el campo error Unexpected error y la otra componente con el campo detalle con el mensaje del error
  /api/carts/{cid}/product/{pid}:
    post:
      summary: Agrega al carrito de la DB que coincida con el cid pasado por params, una cantidad del producto pasado por pid
      tags:
        - Carts
      parameters:
      - name: cid
        in: path
        required: true
        description: Ingrese el CID del carrito que desea agregarle un producto
        schema:
          type: ObjectId
      - name: pid
        in: path
        required: true
        description: Ingrese el PID del producto que desea agregar
        schema:
          type: ObjectId
      responses:
        "200":
          description: Devuelve un objeto con el status "ok" y un campo cartSelected con el carrito de cid solicitado actualizado con el nuevo producto
        "500":
          description: Devuelve un objeto con un Error donde la primer componente muestra el campo error Unexpected error y la otra componente con el campo detalle con el mensaje del error
    put:
      summary: Modifica la cantidad del producto con pid solicitado en el carrito de la DB que coincida con el cid pasado por params
      tags:
        - Carts
      requestBody:
        required: true
        content:
          application/json:
            schema:
            $ref: '#components/requestBodies/modifyQuantity'
      parameters:
        - name: cid
          in: path
          required: true
          description: Ingrese el CID del carrito que desea modificar
          schema:
            type: ObjectId
        - name: pid
          in: path
          required: true
          description: Ingrese el PID del producto que desea modificar su cantidad
          schema:
            type: ObjectId
      responses:
        "200":
          description: Devuelve un objeto con el status "ok" y un campo quantityUpdated con el con el carrito y la cantidad del producto solicitado actualizado
        "400":
          description: Devuelve un objeto con el status "error" y un campo message indicando que no se admiten cantidades negativas
        "500":
          description: Devuelve un objeto con un Error donde la primer componente muestra el campo error Unexpected error y la otra componente con el campo detalle con el mensaje del error
    delete:
      summary: Elimina el producto solicitado por params del carrito que coincida con el cid pasado por params
      tags:
        - Carts
      parameters:
      - name: cid
        in: path
        required: true
        description: Ingrese el CID del carrito que desea acceder
        schema:
          type: ObjectId
      - name: pid
        in: path
        required: true
        description: Ingrese el PID del producto que desea eliminar del carrito
        schema:
          type: ObjectId
      responses:
        "200":
          description: Devuelve un objeto con el status "ok" y un campo cartUpdated con detalle de la operación de eliminación de un producto en un carrito
        "500":
          description: Devuelve un objeto con un Error donde la primer componente muestra el campo error Unexpected error y la otra componente con el campo detalle con el mensaje del error
  /api/carts/{cid}/purchase:
    post:
      summary: Genera un ticket de compra para el carrito con cid pasado por params
      tags:
        - Carts
      parameters:
      - name: cid
        in: path
        required: true
        description: Ingrese el CID del carrito al que desea generarle un ticket
        schema:
          type: ObjectId
      responses:
        "201":
          description: Devuelve un objeto con el campo status "success" si hay stock disponible de todos los productos que se agregaron al carrito o "incomplete" en caso contrario, un campo purchaseTicket con el detalle (datos del cliente e importe total de la compra) de la compra generada y el campo idsProductsWithoutStock con un arreglo con los id's de los productos que no se pudieron procesar, o sea, que no tenian stock suficiente 
        "500":
          description: Devuelve un objeto con un Error donde la primer componente muestra el campo error Unexpected error y la otra componente con el campo detalle con el mensaje del error
components:
  schemas:
    Cart:
      type: object
      properties:
        products:
          type: array
          items:
            type: object
            properties:
              productId:
                type: ObjectID
              quantity:
                type: number
      example:
        _id: ObjectId("656df58ff045035c7d4dd8a6")
        products:
          - productId: "656e5a832943f50a737deae9"
            quantity: 5
          - productId: "656e82d3aecef67c8207a314"
            quantity: 3
          - productId: "656e82e7aecef67c8207a319"
            quantity: 2
  requestBodies:
    modifyCart:
      type: object
      properties:
        products:
          type: array
          items:
            type: object
            properties:
              productId:
                type: ObjectID
              quantity:
                type: number
      example:
        products:
          - productId: "656e5a832943f50a737deae9"
            quantity: 4
          - productId: "656e82d3aecef67c8207a314"
            quantity: 3
          - productId: "656e82e7aecef67c8207a319"
            quantity: 1
    modifyQuantity:
      type: object
      properties:
        quantity:
          type: number
      example:
        quantity: 10
